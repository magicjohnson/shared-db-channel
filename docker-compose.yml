version: '3.5'

x-services:
  base: &base-api
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - postgres
      - minio
    environment:
      DATABASE_URI: postgresql+psycopg2://$DB_USER:$DB_PASSWORD@$DB_HOST:$CONN_DB_PORT/$DB_NAME
      API_PORT: $API_PORT
    volumes:
      - .:/src

services:
  api:
    <<: *base-api
    ports: ['$API_PORT:$API_PORT']
    command: bash -c "cd /src && ./scripts/wait-for-it.sh $DB_HOST:$CONN_DB_PORT && ./scripts/runserver.sh"

  postgres:
    image: postgres:10.5
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=$DB_NAME
    ports: ['${HOST_BIND_DB_PORT}:5432']
    restart: on-failure

  minio:
    # https://docs.min.io/docs/minio-docker-quickstart-guide.html
    image: minio/minio
    command: server /minio-data
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minio_access_key}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minio_secret_key}
      - MINIO_HTTP_TRACE=/minio-data/requests.log
    # we don't have to expose it directly to the host machine for our demo,
    # but it's useful for starting service on the host
    ports: ['${HOST_BIND_MINIO_PORT:-9001}:9000']
    restart: on-failure
    volumes:
      - ./var/minio-data:/minio-data

  tests:
    <<: *base-api
    container_name: tests
    command: bash -c "cd /src && pytest --junitxml=/src/api/tests/results.xml"
    environment:
      - TEST_SUBSCRIPTIONS_REPO_HOST=${TEST_SUBSCRIPTION_REPO_HOST:-minio}
      - TEST_SUBSCRIPTIONS_REPO_PORT=${TEST_SUBSCRIPTION_REPO_PORT:-9000}
      - TEST_SUBSCRIPTIONS_REPO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minio_access_key}
      - TEST_SUBSCRIPTIONS_REPO_SECRET_KEY=${MINIO_SECRET_KEY:-minio_secret_key}
      - IGL_ALLOW_UNSAFE_REPO_IS_EMPTY=True
      - IGL_ALLOW_UNSAFE_REPO_CLEAR=True
